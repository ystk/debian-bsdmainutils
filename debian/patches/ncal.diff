Description: Make ncal work with UTF-8.
Author: Michael Meskes <meskes@debian.org>

--- freebsd/usr.bin/ncal/ncal.c	2009-09-22 11:18:30.000000000 +0200
+++ bsdmainutils/usr.bin/ncal/ncal.c	2009-09-22 14:40:50.000000000 +0200
@@ -29,7 +29,7 @@
   "$FreeBSD$";
 #endif /* not lint */
 
-#include <calendar.h>
+#include "calendar.h"
 #include <ctype.h>
 #include <err.h>
 #include <langinfo.h>
@@ -417,10 +417,15 @@
 	date    dt;
 	struct tm tm;
 	char    buf[80];
-	static int d_first = -1;
 
-	if (d_first < 0)
-		d_first = (*nl_langinfo(D_MD_ORDER) == 'd');
+#ifndef D_MD_ORDER
+        static int d_first = 1; /* XXX */
+#else
+        static int d_first = -1;
+
+        if (d_first < 0)
+                d_first = (*nl_langinfo(D_MD_ORDER) == 'd');
+#endif
 	/* force orthodox easter for years before 1583 */
 	if (y < 1583)
 		orthodox = 1;
@@ -450,7 +455,7 @@
 
 	mkmonth(y, m - 1, jd_flag, &month);
 	mkweekdays(&wds);
-	printf("    %ls %d\n", month.name, y);
+	wprintf(L"    %ls %d\n", month.name, y);
 	for (i = 0; i != 7; i++) {
 		len = wcslen(wds.names[i]);
 		if (wcswidth(wds.names[i], len) == len)
@@ -459,7 +464,7 @@
 			wprintf(L"%.1ls%s\n", wds.names[i], month.lines[i]);
 	}
 	if (flag_weeks)
-		printf("  %s\n", month.weeks);
+		wprintf(L"  %s\n", month.weeks);
 }
 
 void
@@ -490,7 +495,7 @@
 			wds.names[4], wds.names[5]);
 
 	for (i = 0; i != 6; i++)
-		printf("%s\n", month.lines[i]+1);
+		wprintf(L"%s\n", month.lines[i]+1);
 }
 
 void
@@ -510,14 +515,14 @@
 	mw = jd_flag ? MONTH_WIDTH_J : MONTH_WIDTH;
 
 	sprintf(s, "%d", y);
-	printf("%s\n", center(t, s, mpl * mw));
+	wprintf(L"%s\n", center(t, s, mpl * mw));
 
 	for (j = 0; j != 12; j += mpl) {
 		wprintf(L"    %-*ls%-*ls",
 		    mw, year[j].name,
 		    mw, year[j + 1].name);
 		if (mpl == 3)
-			printf("%ls\n", year[j + 2].name);
+			wprintf(L"%ls\n", year[j + 2].name);
 		else
 			wprintf(L"%-*ls%ls\n",
 		    	    mw, year[j + 2].name,
@@ -528,20 +533,20 @@
 			    mw, year[j].lines[i],
 			    mw, year[j + 1].lines[i]);
 			if (mpl == 3)
-				printf("%s\n", year[j + 2].lines[i]);
+				wprintf(L"%s\n", year[j + 2].lines[i]);
 			else
-				printf("%-*s%s\n",
+				wprintf(L"%-*s%s\n",
 			    	    mw, year[j + 2].lines[i],
 			    	    year[j + 3].lines[i]);
 		}
 		if (flag_weeks) {
 			if (mpl == 3)
-				printf("  %-*s%-*s%-s\n",
+				wprintf(L"  %-*s%-*s%-s\n",
 				    mw, year[j].weeks,
 				    mw, year[j + 1].weeks,
 				    year[j + 2].weeks);
 			else
-				printf("  %-*s%-*s%-*s%-s\n",
+				wprintf(L"  %-*s%-*s%-*s%-s\n",
 				    mw, year[j].weeks,
 				    mw, year[j + 1].weeks,
 				    mw, year[j + 2].weeks,
@@ -568,12 +573,12 @@
 	mw = jd_flag ? MONTH_WIDTH_B_J : MONTH_WIDTH_B;
 
 	sprintf(s, "%d", y);
-	printf("%s\n\n", center(t, s, mw * mpl + mpl));
+	wprintf(L"%s\n\n", center(t, s, mw * mpl + mpl));
 
 	for (j = 0; j != 12; j += mpl) {
 		wprintf(L"%-*ls  ", mw, wcenter(ws, year[j].name, mw));
 		if (mpl == 2)
-			printf("%ls\n", wcenter(ws, year[j + 1].name, mw));
+			wprintf(L"%ls\n", wcenter(ws, year[j + 1].name, mw));
 		else
 			wprintf(L"%-*ls  %ls\n", mw,
 			    wcenter(ws, year[j + 1].name, mw),
@@ -603,11 +608,11 @@
 				wds.names[5]);
 		for (i = 0; i != 6; i++) {
 			if (mpl == 2)
-				printf("%-*s  %s\n",
+				wprintf(L"%-*s  %s\n",
 			    mw, year[j].lines[i]+1,
 			    year[j + 1].lines[i]+1);
 			else
-				printf("%-*s  %-*s  %s\n",
+				wprintf(L"%-*s  %-*s  %s\n",
 			    mw, year[j].lines[i]+1,
 			    mw, year[j + 1].lines[i]+1,
 			    year[j + 2].lines[i]+1);
@@ -636,7 +641,7 @@
 	memset(&tm, 0, sizeof(tm));
 	tm.tm_mon = m;
 	wcsftime(mlines->name, sizeof(mlines->name) / sizeof(mlines->name[0]),
-		 L"%OB", &tm);
+		 L"%B", &tm);
 	mlines->name[0] = towupper(mlines->name[0]);
 
 	/*
@@ -750,7 +755,7 @@
 	memset(&tm, 0, sizeof(tm));
 	tm.tm_mon = m;
 	wcsftime(mlines->name, sizeof(mlines->name) / sizeof(mlines->name[0]),
-		 L"%OB", &tm);
+		 L"%B", &tm);
 	mlines->name[0] = towupper(mlines->name[0]);
 
 	/*
