Description: Use locale to figure out first day of week.
Author: Michael Meskes <meskes@debian.org>

--- bsdmainutils/usr.bin/ncal/ncal.c.orig	2010-06-14 10:45:48.000000000 +0200
+++ bsdmainutils/usr.bin/ncal/ncal.c	2010-06-14 10:48:08.000000000 +0200
@@ -162,6 +162,7 @@
 int     nswitch;		/* user defined switch date */
 int	nswitchb;		/* switch date for backward compatibility */
 const char	*term_so, *term_se;
+int     weekstart = 0;              /* day the week starts on (Sun [0] - Sat [6]) */
 int	today;
 
 char   *center(char *s, char *t, int w);
@@ -206,6 +207,11 @@
 	char tbuf[1024], cbuf[512], *b;
 	time_t t;
 	struct tm *tm1;
+#ifdef __GLIBC__
+	int first_week_i;
+	date first_week_d;
+	date sunday = { .y = 1997, .m = 11, .d = 30 };
+#endif
 
 	term_se = term_so = NULL;
 	today = 0;
@@ -263,6 +269,20 @@
 	if (flag_backward)
 		nswitchb = ndaysj(&ukswitch);
 
+	/* Determine on what day the week starts. */
+	if (flag_backward) 
+		weekstart = 1; /* technically not correct, but removing the need to add 1 later on */
+#ifdef __GLIBC__
+	else {
+		first_week_i = (intptr_t) nl_langinfo(_NL_TIME_WEEK_1STDAY);
+		first_week_d.d = first_week_i % 100;
+		first_week_i /= 100;
+		first_week_d.m = first_week_i % 100;
+		first_week_i /= 100;
+		first_week_d.y = first_week_i;
+		weekstart = *nl_langinfo(_NL_TIME_FIRST_WEEKDAY) + (ndaysj(&first_week_d) - ndaysj(&sunday)) % 7 - 1;
+	}
+#endif
 	while ((ch = getopt(argc, argv, "Jehjm:ops:wy")) != -1)
 		switch (ch) {
 		case 'J':
@@ -797,10 +797,13 @@
 		jan1 = firstday(y, 1);
 
 	/*
-	 * Set firstm to the day number of monday of the first week of
+	 * Set firstm to the day number of the day starting the first week of
 	 * this month. (This might be in the last month)
 	 */
-	firstm = first - weekday(first);
+	if (weekstart == 0)
+		firstm = first - (weekday(first) + 1) % 7;
+	else
+		firstm = first - weekday(first);
 
 	/* Set ds (daystring) and dw (daywidth) according to the jd_flag */
 	if (jd_flag) {
@@ -1000,7 +1003,7 @@
 	memset(&tm, 0, sizeof(tm));
 
 	for (i = 0; i != 7; i++) {
-		tm.tm_wday = (i+1) % 7;
+		tm.tm_wday = (i+weekstart) % 7;
 		wcsftime(buf, sizeof(buf), L"%a", &tm);
 		for (len = 2; len > 0; --len) {
 			if ((width = wcswidth(buf, len)) <= 2)
